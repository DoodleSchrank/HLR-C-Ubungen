============================================================
Program for calculation of partial differential equations.  
============================================================
(c) Dr. Thomas Ludwig, TU München.
    Thomas A. Zochler, TU München.
    Andreas C. Schmidt, TU München.
============================================================

Usage: partdiff [num] [method] [lines] [func] [term] [prec/iter]

  - num:       number of threads (1 .. 1024)
  - method:    calculation method (1 .. 2)
                 1: Gauß-Seidel
                 2: Jacobi
  - lines:     number of interlines (0 .. 10240)
                 matrixsize = (interlines * 8) + 9
  - func:      interference function (1 .. 2)
                 1: f(x,y) = 0
                 2: f(x,y) = 2 * pi^2 * sin(pi * x) * sin(pi * y)
  - term:      termination condition ( 1.. 2)
                 1: sufficient precision
                 2: number of iterations
  - prec/iter: depending on term:
                 precision:  1e-4 .. 1e-20
                 iterations:    1 .. 200000

Example: partdiff 1 2 100 1 2 100 
============================================================
Program for calculation of partial differential equations.  
============================================================
(c) Dr. Thomas Ludwig, TU München.
    Thomas A. Zochler, TU München.
    Andreas C. Schmidt, TU München.
============================================================

Usage: partdiff [num] [method] [lines] [func] [term] [prec/iter]

  - num:       number of threads (1 .. 1024)
  - method:    calculation method (1 .. 2)
                 1: Gauß-Seidel
                 2: Jacobi
  - lines:     number of interlines (0 .. 10240)
                 matrixsize = (interlines * 8) + 9
  - func:      interference function (1 .. 2)
                 1: f(x,y) = 0
                 2: f(x,y) = 2 * pi^2 * sin(pi * x) * sin(pi * y)
  - term:      termination condition ( 1.. 2)
                 1: sufficient precision
                 2: number of iterations
  - prec/iter: depending on term:
                 precision:  1e-4 .. 1e-20
                 iterations:    1 .. 200000

Example: partdiff 1 2 100 1 2 100 
============================================================
Program for calculation of partial differential equations.  
============================================================
(c) Dr. Thomas Ludwig, TU München.
    Thomas A. Zochler, TU München.
    Andreas C. Schmidt, TU München.
============================================================

Usage: partdiff [num] [method] [lines] [func] [term] [prec/iter]

  - num:       number of threads (1 .. 1024)
  - method:    calculation method (1 .. 2)
                 1: Gauß-Seidel
                 2: Jacobi
  - lines:     number of interlines (0 .. 10240)
                 matrixsize = (interlines * 8) + 9
  - func:      interference function (1 .. 2)
                 1: f(x,y) = 0
                 2: f(x,y) = 2 * pi^2 * sin(pi * x) * sin(pi * y)
  - term:      termination condition ( 1.. 2)
                 1: sufficient precision
                 2: number of iterations
  - prec/iter: depending on term:
                 precision:  1e-4 .. 1e-20
                 iterations:    1 .. 200000

Example: partdiff 1 2 100 1 2 100 
srun: error: west7: tasks 0-2: Exited with exit code 1
